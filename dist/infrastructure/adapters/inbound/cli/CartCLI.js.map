{"version":3,"file":"CartCLI.js","sourceRoot":"","sources":["../../../../../src/infrastructure/adapters/inbound/cli/CartCLI.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CartUseCase } from '../../../../domain/ports/inbound/CartUseCase.js';\r\n\r\nexport default class CartCLI {\r\n  private cartUseCase: CartUseCase;\r\n\r\n  constructor(cartUseCase: CartUseCase) {\r\n    this.cartUseCase = cartUseCase;\r\n  }\r\n\r\n  async run(options: {\r\n    cartId?: string;\r\n    items?: Array<{ name?: string; price: number; quantity?: number }>;\r\n    discountTypes?: string[];\r\n    showDetails?: boolean;\r\n  } = {}) {\r\n    const {\r\n      cartId = 'cart1',\r\n      items = [{ price: 100 }, { price: 50 }],\r\n      discountTypes = ['NONE', 'TEN_PERCENT', 'TWENTY_PERCENT'],\r\n      showDetails = true\r\n    } = options;\r\n\r\n    console.log('üõí Iniciando Shopping Cart CLI...');\r\n    console.log(`üìã Cart ID: ${cartId}`);\r\n\r\n    try {\r\n      if (showDetails) console.log('üì¶ Adicionando itens ao carrinho...');\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        await this.cartUseCase.addItemToCart(cartId, items[i]);\r\n        if (showDetails) console.log(`‚úÖ Item ${i + 1} adicionado: R$ ${items[i].price}`);\r\n      }\r\n\r\n      if (showDetails) console.log('\\nüí∞ Calculando totais...');\r\n\r\n      const results: Record<string, number> = {};\r\n\r\n      for (const discountType of discountTypes) {\r\n        const total = await this.cartUseCase.calculateTotal(cartId, discountType);\r\n        results[discountType] = total;\r\n\r\n        const discountName = this.getDiscountName(discountType);\r\n        if (showDetails) console.log(`üî∏ Total ${discountName}: R$ ${total}`);\r\n      }\r\n\r\n      if (showDetails) console.log('\\nüéâ Shopping Cart CLI executado com sucesso!');\r\n\r\n      return {\r\n        cartId,\r\n        items,\r\n        totals: results,\r\n        itemCount: items.length,\r\n        summary: this.generateSummary(results)\r\n      };\r\n    } catch (error: any) {\r\n      console.log('‚ùå Erro no CartCLI:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private getDiscountName(type: string): string {\r\n    switch (type) {\r\n      case 'NONE': return 'Sem Desconto';\r\n      case 'TEN_PERCENT': return '10% Desconto';\r\n      case 'TWENTY_PERCENT': return '20% Desconto';\r\n      default: return type;\r\n    }\r\n  }\r\n\r\n  private generateSummary(results: Record<string, number>) {\r\n    const entries = Object.entries(results);\r\n    const best = entries.reduce((acc, cur) => cur[1] < acc[1] ? cur : acc);\r\n    return {\r\n      bestDiscountType: best[0],\r\n      bestTotal: best[1]\r\n    };\r\n  }\r\n}"]}