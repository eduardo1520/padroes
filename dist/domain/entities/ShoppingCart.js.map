{"version":3,"file":"ShoppingCart.js","sourceRoot":"","sources":["../../../src/domain/entities/ShoppingCart.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,2BAA2B,CAAC;AAC9C,OAAO,QAAQ,MAAM,8BAA8B,CAAC;AAEpD,MAAM,CAAC,OAAO,OAAO,YAAY;IACvB,EAAE,CAAS;IACX,KAAK,CAAa;IAE1B,YAAY,EAAU;QACpB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,OAAO,CAAC,UAAgF,EAAE,KAAsB,EAAE,WAAmB,CAAC;QACpI,IAAI,IAAc,CAAC;QAEnB,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;YAC1D,MAAM,QAAQ,GAAG,UAAU,CAAC;YAC5B,IAAI,GAAG,IAAI,QAAQ,CACjB,QAAQ,CAAC,IAAI,IAAI,MAAM,EACvB,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,QAAQ,IAAI,CAAC,CACvB,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,KAAuB,EAAE,QAAQ,CAAC,CAAC;QACrE,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAEO,iBAAiB;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;QACxE,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,cAAc,CAAC,gBAA+D;QAC5E,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,CAAC;QACtD,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,OAAO,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,qBAAqB,CAAC,gBAA+D;QACnF,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,gBAAgB,EAAE,CAAC;YACrB,MAAM,QAAQ,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;YAC1E,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,QAAQ,CAAC,CAAC;QACpD,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,gBAA8D;QAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1C,MAAM,QAAQ,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QAC1E,OAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,CAAC;CACF","sourcesContent":["import Money from '../value-objects/Money.js';\r\nimport CartItem from '../value-objects/CartItem.js';\r\n\r\nexport default class ShoppingCart {\r\n  private id: string;\r\n  private items: CartItem[];\r\n\r\n  constructor(id: string) {\r\n    this.id = id;\r\n    this.items = [];\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getItems(): CartItem[] {\r\n    return this.items;\r\n  }\r\n\r\n  addItem(nameOrItem: { name?: string; price: number | Money; quantity?: number } | string, price?: number | Money, quantity: number = 1): void {\r\n    let item: CartItem;\r\n\r\n    if (typeof nameOrItem === 'object' && nameOrItem !== null) {\r\n      const itemData = nameOrItem;\r\n      item = new CartItem(\r\n        itemData.name || 'Item',\r\n        itemData.price,\r\n        itemData.quantity || 1\r\n      );\r\n    } else {\r\n      item = new CartItem(nameOrItem, price as number | Money, quantity);\r\n    }\r\n\r\n    this.items.push(item);\r\n  }\r\n\r\n  private calculateSubtotal(): Money {\r\n    const sum = this.items.reduce((acc, i) => acc + i.total.getAmount(), 0);\r\n    return new Money(sum);\r\n  }\r\n\r\n  calculateTotal(discountStrategy?: { calculateDiscount(total: number): number }): number {\r\n    const subtotal = this.calculateSubtotal().getAmount();\r\n    const discount = discountStrategy ? discountStrategy.calculateDiscount(subtotal) : 0;\r\n    return subtotal - discount;\r\n  }\r\n\r\n  calculateTotalAsMoney(discountStrategy?: { calculateDiscount(total: number): number }): Money {\r\n    const subtotal = this.calculateSubtotal();\r\n    if (discountStrategy) {\r\n      const discount = discountStrategy.calculateDiscount(subtotal.getAmount());\r\n      return new Money(subtotal.getAmount() - discount);\r\n    }\r\n    return subtotal;\r\n  }\r\n\r\n  applyDiscount(discountStrategy: { calculateDiscount(total: number): number }): Money {\r\n    const subtotal = this.calculateSubtotal();\r\n    const discount = discountStrategy.calculateDiscount(subtotal.getAmount());\r\n    return subtotal.subtract(new Money(discount));\r\n  }\r\n}"]}